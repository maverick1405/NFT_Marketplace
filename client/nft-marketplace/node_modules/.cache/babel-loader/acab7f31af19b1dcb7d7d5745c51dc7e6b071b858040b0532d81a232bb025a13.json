{"ast":null,"code":"var _jsxFileName = \"/Users/mohittrivedi/Study/Project/NFTMarketPlace-main/client/nft-marketplace/src/components/Profile.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport abi from \"../contracts/NFTMarketplace.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractABI = abi.abi;\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nexport default function Profile() {\n  _s();\n  const [data, updateData] = useState([]);\n  const [dataFetched, updateFetched] = useState(false);\n  const [address, updateAddress] = useState(\"0x\");\n  const [totalPrice, updateTotalPrice] = useState(\"0\");\n  async function getNFTData(tokenId) {\n    const ethers = require(\"ethers\");\n    let sumPrice = 0;\n    //After adding your Hardhat network to your metamask, this code will get providers and signers\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const addr = await signer.getAddress();\n\n    //Pull the deployed contract instance\n    let contract = new ethers.Contract(contractAddress, contractABI, signer);\n\n    //create an NFT Token\n    let transaction = await contract.getMyNFTs();\n\n    /*\n    * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\n    * and creates an object of information that is to be displayed\n    */\n\n    const items = await Promise.all(transaction.map(async i => {\n      const tokenURI = await contract.tokenURI(i.tokenId);\n      let meta = await axios.get(tokenURI);\n      meta = meta.data;\n      let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n      let item = {\n        price,\n        tokenId: i.tokenId.toNumber(),\n        seller: i.seller,\n        owner: i.owner,\n        image: meta.image,\n        name: meta.name,\n        description: meta.description\n      };\n      sumPrice += Number(price);\n      return item;\n    }));\n    updateData(items);\n    updateFetched(true);\n    updateAddress(addr);\n    updateTotalPrice(sumPrice.toPrecision(3));\n  }\n  const params = useParams();\n  const tokenId = params.tokenId;\n  if (!dataFetched) getNFTData(tokenId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileClass\",\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileClass\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex text-center flex-col mt-11 md:text-2xl text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Wallet Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this), address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"No. of NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), data.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-20\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"font-bold\",\n            children: \"Total Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), totalPrice, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col text-center items-center mt-11 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold\",\n          children: \"Your NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center flex-wrap max-w-screen-xl\",\n          children: data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(NFTTile, {\n              data: value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-10 text-xl\",\n          children: data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"2EsCq+A3YKmNbGfcrpDlqLJtmds=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\n;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Navbar","useLocation","useParams","axios","useState","NFTTile","abi","jsxDEV","_jsxDEV","contractABI","contractAddress","Profile","_s","data","updateData","dataFetched","updateFetched","address","updateAddress","totalPrice","updateTotalPrice","getNFTData","tokenId","ethers","require","sumPrice","provider","providers","Web3Provider","window","ethereum","signer","getSigner","addr","getAddress","contract","Contract","transaction","getMyNFTs","items","Promise","all","map","i","tokenURI","meta","get","price","utils","formatUnits","toString","item","toNumber","seller","owner","image","name","description","Number","toPrecision","params","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","length","value","index","_c","$RefreshReg$"],"sources":["/Users/mohittrivedi/Study/Project/NFTMarketPlace-main/client/nft-marketplace/src/components/Profile.js"],"sourcesContent":["import Navbar from \"./Navbar\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NFTTile from \"./NFTTile\";\nimport abi from \"../contracts/NFTMarketplace.json\";\n\n\nconst contractABI = abi.abi;\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nexport default function Profile () {\n    const [data, updateData] = useState([]);\n    const [dataFetched, updateFetched] = useState(false);\n    const [address, updateAddress] = useState(\"0x\");\n    const [totalPrice, updateTotalPrice] = useState(\"0\");\n\n    async function getNFTData(tokenId) {\n        const ethers = require(\"ethers\");\n        let sumPrice = 0;\n        //After adding your Hardhat network to your metamask, this code will get providers and signers\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const addr = await signer.getAddress();\n\n        //Pull the deployed contract instance\n        let contract = new ethers.Contract(contractAddress, contractABI, signer)\n\n        //create an NFT Token\n        let transaction = await contract.getMyNFTs()\n\n        /*\n        * Below function takes the metadata from tokenURI and the data returned by getMyNFTs() contract function\n        * and creates an object of information that is to be displayed\n        */\n        \n        const items = await Promise.all(transaction.map(async i => {\n            const tokenURI = await contract.tokenURI(i.tokenId);\n            let meta = await axios.get(tokenURI);\n            meta = meta.data;\n\n            let price = ethers.utils.formatUnits(i.price.toString(), 'ether');\n            let item = {\n                price,\n                tokenId: i.tokenId.toNumber(),\n                seller: i.seller,\n                owner: i.owner,\n                image: meta.image,\n                name: meta.name,\n                description: meta.description,\n            }\n            sumPrice += Number(price);\n            return item;\n        }))\n\n        updateData(items);\n        updateFetched(true);\n        updateAddress(addr);\n        updateTotalPrice(sumPrice.toPrecision(3));\n    }\n\n    const params = useParams();\n    const tokenId = params.tokenId;\n    if(!dataFetched)\n        getNFTData(tokenId);\n\n    return (\n        <div className=\"profileClass\" style={{\"min-height\":\"100vh\"}}>\n            <Navbar></Navbar>\n            <div className=\"profileClass\">\n            <div className=\"flex text-center flex-col mt-11 md:text-2xl text-white\">\n                <div className=\"mb-5\">\n                    <h2 className=\"font-bold\">Wallet Address</h2>  \n                    {address}\n                </div>\n            </div>\n            <div className=\"flex flex-row text-center justify-center mt-10 md:text-2xl text-white\">\n                    <div>\n                        <h2 className=\"font-bold\">No. of NFTs</h2>\n                        {data.length}\n                    </div>\n                    <div className=\"ml-20\">\n                        <h2 className=\"font-bold\">Total Value</h2>\n                        {totalPrice} ETH\n                    </div>\n            </div>\n            <div className=\"flex flex-col text-center items-center mt-11 text-white\">\n                <h2 className=\"font-bold\">Your NFTs</h2>\n                <div className=\"flex justify-center flex-wrap max-w-screen-xl\">\n                    {data.map((value, index) => {\n                    return <NFTTile data={value} key={index}></NFTTile>;\n                    })}\n                </div>\n                <div className=\"mt-10 text-xl\">\n                    {data.length == 0 ? \"Oops, No NFT data to display (Are you logged in?)\":\"\"}\n                </div>\n            </div>\n            </div>\n        </div>\n    )\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}